services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.4
    container_name: elasticsearch
    restart: on-failure
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:9.1.4
    container_name: logstash
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    volumes:
      - ./docker/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.4
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      XPACK_ENCRYPTED_SAVED_OBJECTS_ENCRYPTIONKEY: "3f7d9a8b2c4e6f1g0h5j9k2l8m0n4p7q"
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  filebeat:
    build:
      context: ./docker/elk/beats/filebeat
      dockerfile: Dockerfile.filebeat
    user: root
    restart: on-failure
    environment:
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=ChangeMeElastic123!
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/elk/beats/filebeat/filebeatdata:/usr/share/filebeat/data:rw
    depends_on:
      - logstash
    networks:
      - elk

  metricbeat:
    container_name: metricbeat
    build:
      context: ./docker/elk/beats/metricbeat
      dockerfile: Dockerfile.metricbeat
    user: root
    environment:
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=ChangeMeElastic123!
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: on-failure
    networks:
      - elk
    depends_on:
      - elasticsearch

  heartbeat:
    container_name: heartbeat
    build:
      context: ./docker/elk/beats/heartbeat
      dockerfile: Dockerfile.heartbeat
    restart: on-failure
    environment:
      - setup.kibana.host:kibana:5601
    networks:
      - elk
    depends_on:
      - elasticsearch
  apm:
    build:
      context: ./docker/elk/apm
      dockerfile: Dockerfile.apm
    ports:
      - 8200:8200
    restart: on-failure
    networks:
      - elk

volumes:
  esdata:

networks:
  elk:
    driver: bridge
