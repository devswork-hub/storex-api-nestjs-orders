services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    restart: on-failure
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash
    environment:
      - 'LS_JAVA_OPTS=-Xmx256m -Xms256m'
    volumes:
      # - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./docker/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - '5000:5000'
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    networks:
      - elk

  filebeat:
    build:
      context: ./docker/elk/filebeat
      dockerfile: Dockerfile.filebeat
    user: root
    restart: on-failure
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/elk/filebeatdata:/usr/share/filebeat/data:rw
    depends_on:
      - logstash
    networks:
      - elk

volumes:
  esdata:

networks:
  elk:
    driver: bridge
