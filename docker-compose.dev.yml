# https://medium.com/norsys-octogone/a-local-environment-for-mongodb-with-docker-compose-ba52445b93ed
include:
  - docker-compose.rabbitmq.yml
  # - docker-compose.kafka.yml
  # - docker-compose.keycloak.yml
  - docker-compose.pg.yml
  - docker-compose.sonarqube.yml
  - docker-compose.elk.yml
  # - ./docker/postgres/docker-compose.pg.yml
services:
  redis:
    networks:
      - app
    container_name: cache
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  redis-bullmq:
    networks:
      - app
    container_name: redis-bullmq
    image: redis
    ports:
      - 6380:6379
    volumes:
      - redis:/data
  mongodb:
    networks:
      - app
    image: mongo:latest
    restart: always
    container_name: storex_mongodb_orders
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS}
    ports:
      - "27017:27017"
    env_file:
      - .env

  # Alternativa: Servidor SMTP simples
  smtp4dev:
    networks:
      - app
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      # Bind to localhost only for security
      - "127.0.0.1:5001:80" # Web interface
      - "127.0.0.1:2525:25" # SMTP server (using non-standard port)
      - "127.0.0.1:1143:143" # IMAP server (using non-standard port)
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      # Container configuration (this binds within the container)
      - ServerOptions__Urls=http://*:80
      - ServerOptions__HostName=smtp4dev

  nestjs:
    build: .
    env_file:
      - .env.docker
    ports:
      - "5231:5321"
    labels:
      filebeat_collector: true
    networks:
      - app

networks:
  app:
    driver: bridge
volumes:
  postgres_data:
  redis:
    driver: local
  rabbitmq_data:
  smtp4dev-data:
